<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.0917.1006                               -->
<workbook original-version='18.1' source-build='2021.3.1 (20213.21.0917.1006)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CascadingFilters />
    <ISO8601PeriodTypes />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.07j8ved1xzjs061a9sv871hzaoer' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0oneqpz05tm9j716mc0yb0o8gn13'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Administrator/Desktop/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0oneqpz05tm9j716mc0yb0o8gn13' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0oneqpz05tm9j716mc0yb0o8gn13' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_035F8A044C6845C49991927E30ADC343]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Custome Grop]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='false' value='&quot;A &amp; B&quot;'>
            <value>&quot;Accessories&quot;</value>
            <value>&quot;Appliances&quot;</value>
            <value>&quot;Art&quot;</value>
            <value>&quot;Binders&quot;</value>
            <value>&quot;Bookcases&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;C,E &amp; F&quot;'>
            <value>&quot;Chairs&quot;</value>
            <value>&quot;Copiers&quot;</value>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Furnishings&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;OT&quot;'>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Machines&quot;</value>
            <value>&quot;Paper&quot;</value>
            <value>&quot;Phones&quot;</value>
            <value>&quot;Storage&quot;</value>
            <value>&quot;Supplies&quot;</value>
            <value>&quot;Tables&quot;</value>
          </bin>
        </calculation>
      </column>
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='true' value='&quot;Accessories, Appliances, Binders and 6 more&quot;'>
            <value>&quot;Accessories&quot;</value>
            <value>&quot;Appliances&quot;</value>
            <value>&quot;Binders&quot;</value>
            <value>&quot;Chairs&quot;</value>
            <value>&quot;Copiers&quot;</value>
            <value>&quot;Furnishings&quot;</value>
            <value>&quot;Paper&quot;</value>
            <value>&quot;Phones&quot;</value>
            <value>&quot;Storage&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Art, Envelopes, Fasteners and 2 more&quot;'>
            <value>&quot;Art&quot;</value>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Machines&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Bookcases, Supplies, Tables&quot;'>
            <value>&quot;Bookcases&quot;</value>
            <value>&quot;Supplies&quot;</value>
            <value>&quot;Tables&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;High Profit&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Losses&quot;'>
            <value>&quot;Bookcases&quot;</value>
            <value>&quot;Supplies&quot;</value>
            <value>&quot;Tables&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Low Profit&quot;'>
            <value>&quot;Art&quot;</value>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Machines&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_035F8A044C6845C49991927E30ADC343]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Prodct'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Sub-Category (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Losses&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;High Profit&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Low Profit&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' type='shape' />
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_035F8A044C6845C49991927E30ADC343'>
            <properties context=''>
              <relation connection='excel-direct.0oneqpz05tm9j716mc0yb0o8gn13' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_1E64148717294F9A8A3FAA19D43DDED6]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='GroupbyDimention' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Sub-Category (group)' />
        <param name='target' value='GroupbyDimention' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='CstomeGroup'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.07j8ved1xzjs061a9sv871hzaoer' />
          </datasources>
          <datasource-dependencies datasource='federated.07j8ved1xzjs061a9sv871hzaoer'>
            <column datatype='string' name='[Custome Grop]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='false' value='&quot;A &amp; B&quot;'>
                  <value>&quot;Accessories&quot;</value>
                  <value>&quot;Appliances&quot;</value>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Binders&quot;</value>
                  <value>&quot;Bookcases&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;C,E &amp; F&quot;'>
                  <value>&quot;Chairs&quot;</value>
                  <value>&quot;Copiers&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Furnishings&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;OT&quot;'>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Machines&quot;</value>
                  <value>&quot;Paper&quot;</value>
                  <value>&quot;Phones&quot;</value>
                  <value>&quot;Storage&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07j8ved1xzjs061a9sv871hzaoer].[Custome Grop]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.07j8ved1xzjs061a9sv871hzaoer].[Custome Grop] / [federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk])</rows>
        <cols>[federated.07j8ved1xzjs061a9sv871hzaoer].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{7AE1BE6A-BA6B-4BE3-9BDB-4EF10DB5CCFB}' />
    </worksheet>
    <worksheet name='GroupbyDimention'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.07j8ved1xzjs061a9sv871hzaoer' />
          </datasources>
          <datasource-dependencies datasource='federated.07j8ved1xzjs061a9sv871hzaoer'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;High Profit&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Losses&quot;'>
                  <value>&quot;Bookcases&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Low Profit&quot;'>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Machines&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07j8ved1xzjs061a9sv871hzaoer].[Sub-Category (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]</rows>
        <cols>[federated.07j8ved1xzjs061a9sv871hzaoer].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{CDE31C80-3C27-4C3F-9666-B1798CAFC9D6}' />
    </worksheet>
    <worksheet name='GruopbyHeader'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.07j8ved1xzjs061a9sv871hzaoer' />
          </datasources>
          <datasource-dependencies datasource='federated.07j8ved1xzjs061a9sv871hzaoer'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='true' value='&quot;Accessories, Appliances, Binders and 6 more&quot;'>
                  <value>&quot;Accessories&quot;</value>
                  <value>&quot;Appliances&quot;</value>
                  <value>&quot;Binders&quot;</value>
                  <value>&quot;Chairs&quot;</value>
                  <value>&quot;Copiers&quot;</value>
                  <value>&quot;Furnishings&quot;</value>
                  <value>&quot;Paper&quot;</value>
                  <value>&quot;Phones&quot;</value>
                  <value>&quot;Storage&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Art, Envelopes, Fasteners and 2 more&quot;'>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Machines&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Bookcases, Supplies, Tables&quot;'>
                  <value>&quot;Bookcases&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07j8ved1xzjs061a9sv871hzaoer].[Sub-Category (group) 1]</rows>
        <cols>[federated.07j8ved1xzjs061a9sv871hzaoer].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{FAE88E8C-EC4B-4F2E-AB01-3095A8F119F6}' />
    </worksheet>
    <worksheet name='datefilter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.07j8ved1xzjs061a9sv871hzaoer' />
          </datasources>
          <datasource-dependencies datasource='federated.07j8ved1xzjs061a9sv871hzaoer'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='relative-date' column='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Order Date:qk]' first-period='-2' include-future='true' include-null='false' last-period='0' period-anchor='#2016-10-31 00:00:00#' period-type-v2='year' />
          <slices>
            <column>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.07j8ved1xzjs061a9sv871hzaoer].[sum:Profit:qk]</rows>
        <cols>[federated.07j8ved1xzjs061a9sv871hzaoer].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{BA591B05-4727-4D44-BF1D-13CF9CDFA3A0}' />
    </worksheet>
    <worksheet name='filtercategory-subcategory'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.07j8ved1xzjs061a9sv871hzaoer' />
          </datasources>
          <datasource-dependencies datasource='federated.07j8ved1xzjs061a9sv871hzaoer'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Category:nk]'>
            <groupfilter from='&quot;Furniture&quot;' function='range' level='[none:Category:nk]' to='&quot;Technology&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]'>
            <groupfilter from='&quot;Accessories&quot;' function='range' level='[none:Sub-Category:nk]' to='&quot;Tables&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Category:nk]</column>
            <column>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07j8ved1xzjs061a9sv871hzaoer].[sum:Profit:qk]</rows>
        <cols>([federated.07j8ved1xzjs061a9sv871hzaoer].[none:Category:nk] / [federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{BEA26D48-3D0A-4C4F-A266-1534530E7E5F}' />
    </worksheet>
    <worksheet name='filtercustomer'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.07j8ved1xzjs061a9sv871hzaoer' />
          </datasources>
          <datasource-dependencies datasource='federated.07j8ved1xzjs061a9sv871hzaoer'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Customer Name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
                <groupfilter from='&quot;Aaron Bergman&quot;' function='range' level='[none:Customer Name:nk]' to='&quot;Zuschuss Donatelli&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07j8ved1xzjs061a9sv871hzaoer].[sum:Profit:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Customer Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07j8ved1xzjs061a9sv871hzaoer].[sum:Profit:qk]</rows>
        <cols>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Customer Name:nk]</cols>
      </table>
      <simple-id uuid='{09632F6D-7256-423A-859D-424B9E59C9E2}' />
    </worksheet>
    <worksheet name='filtermeasre'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.07j8ved1xzjs061a9sv871hzaoer' />
          </datasources>
          <datasource-dependencies datasource='federated.07j8ved1xzjs061a9sv871hzaoer'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='None' name='[none:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Profit:qk]' included-values='in-range'>
            <max>10000.0</max>
          </filter>
          <slices>
            <column>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07j8ved1xzjs061a9sv871hzaoer].[sum:Profit:qk]</rows>
        <cols>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{A3B723FF-D0E1-42F5-A318-2875AE3F70D6}' />
    </worksheet>
    <worksheet name='hirarchyfilter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.07j8ved1xzjs061a9sv871hzaoer' />
          </datasources>
          <datasource-dependencies datasource='federated.07j8ved1xzjs061a9sv871hzaoer'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Category:nk]'>
            <groupfilter from='&quot;Furniture&quot;' function='range' level='[none:Category:nk]' to='&quot;Technology&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]'>
            <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]</column>
            <column>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07j8ved1xzjs061a9sv871hzaoer].[sum:Profit:qk]</rows>
        <cols>([federated.07j8ved1xzjs061a9sv871hzaoer].[none:Category:nk] / [federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk])</cols>
      </table>
      <simple-id uuid='{C8A7BC35-263E-41D0-B1D0-3EA11C7D92EC}' />
    </worksheet>
    <worksheet name='sngle-multipal value filter'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.07j8ved1xzjs061a9sv871hzaoer' />
          </datasources>
          <datasource-dependencies datasource='federated.07j8ved1xzjs061a9sv871hzaoer'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Appliances&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Binders&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.07j8ved1xzjs061a9sv871hzaoer].[sum:Profit:qk]</rows>
        <cols>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{879025DB-A48C-4FBC-9970-AB0C1C890398}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='datefilter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Order Date:qk]</field>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B5C3180E-642A-4FDD-857D-EE34E60D855E}' />
    </window>
    <window class='worksheet' name='filtercustomer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB5857DA-3C10-4E27-ABEE-286965E36ACD}' />
    </window>
    <window class='worksheet' name='filtermeasre'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Profit:qk]</field>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0389FEA1-172E-4D05-BD74-6901C8B6BCF4}' />
    </window>
    <window class='worksheet' name='filtercategory-subcategory'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Category:nk]' type='filter' />
            <card param='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Category:nk]</field>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAEE36B6-1AA3-4795-ABEB-1D32BAB7BE5F}' />
    </window>
    <window class='worksheet' name='sngle-multipal value filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FB6ABB30-BFD2-4B86-A5CC-62E46D44E219}' />
    </window>
    <window class='worksheet' name='hirarchyfilter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Category:nk]' type='filter' values='cascading' />
            <card param='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]' type='filter' values='cascading' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Category:nk]</field>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C22B9347-44F7-4F6F-BAE9-AFD082936277}' />
    </window>
    <window class='worksheet' name='GroupbyDimention'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07j8ved1xzjs061a9sv871hzaoer].[Sub-Category (group)]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{00850767-BB67-4CE1-AB04-88CEFCAB9395}' />
    </window>
    <window class='worksheet' name='GruopbyHeader'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D02AFD6-E39A-4666-A2D0-327C0D59EEC4}' />
    </window>
    <window class='worksheet' maximized='true' name='CstomeGroup'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07j8ved1xzjs061a9sv871hzaoer].[Custome Grop]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[Custome Grop]</field>
            <field>[federated.07j8ved1xzjs061a9sv871hzaoer].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B60449E7-0D77-411E-A01C-2BFDD410367E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='CstomeGroup' width='192'>
      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
      ywAWx5r/D9ln3Aj4/gbeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='GroupbyDimention' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GruopbyHeader' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZnElEQVR4nO3d928caZ7f8XdVdY5sdmAzikESg3KYsDtp7d0brG+Nux8OBxgwFjYMGwb8
      k/+E/WPsX3xYnwfYw+F2Mbd3o0kaZUqUKOZMNkPn3BX8AxVHlEiJrZFa9X0NBiKrik891d2f
      rqfC85RiWZaFEDalvukKCPEmSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAISt
      SQD2YJrmK/1ds+4qMQyjKeVYlvXK2/IkwzDeum0zTbMpdZIA7OFV36RqtfpG1/9jlmU1paxm
      1aeZZUkAhGgCCYCwNQlAE6mqvJytRt6xJtI07U1XQbwkCUAT6br+pqsgXpLjTVfgXbL1+0tU
      V7efO3/7XDuWpuxbjmWBssdit27dplarH7g+ituF98P3UJ4orCPzZyLFGwcuY7c+1lNlPCkf
      6WSrd3TfMs5U4VwVnFjAi1+DJccA190f7jnvypW75HJFDlDMM/76o2H+4r2hp6ZJAJqokS5Q
      S2WeO7+Ud2A5Xn2nu5VKUa3VDry84nYTKJeemubOr+HMzb5yHX4s52iwU4vtu1y5AlQO9pmt
      O9rJWXufLl3bKZJO51+ukg/ky8++dtIEErYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2
      JgEQtiYBELYmARC2JgEQtiYBELb2UgGYvPEtNycXm7by9HaKSn3/TtJT419zfWLlufNr+TR3
      Z+ZJra0jd+SLl3Hw26GtGlUliFbLoxsVrn1zGUd7DzFniflUhZHhHuZm5gkm+gk0tljabnDq
      zCAT1+8Q6x+hzcpwf3GTrqMncBVXSRUUOpIBNI+Xu9fuUPNEGI5rjM9sMHzmPboi3t31GhUq
      Shy1vo1Z9/HNtxM0VCcXLh7l1qXb6G4fF84MYVkWuVKRcGGHKzfv4I4dIeGusLSawtHWy5Fg
      nXuLO4yeOM7C1DRKIM6RkMndxU1OnPuQRMj1ml5i8TY78B6gvLnI9PwS07PTrM9N4hn8gHNj
      g2wX6nzy8ftk5qbIVXWy2SyapmEZFSoNBU2FYjHPWrrKx59+TDa1RKmqc+r8SYxygfzqFFOb
      JYqZLKbmQMGgVKo8Wm9xZ42ZmfsszM6QypVp7x3jZHeUTDlH4shJTnW62arsjn2TzxcoF7PU
      GgYL07PkG3Dhg58R1gyWd4p88snPcezMs5Stks1mUVUVxTIolpsznIloPQcOQK6m8fmvP+fX
      v/gZViBJde4yN+7OEQ26+PrSZUK9fTgt8Pn9KKqCoigoloWiqqiag86Im0tfXSKc6KWtPY7b
      oeH1BQgmh+gMKPj8PpSH/1kNpqZmMYByHf7N53/J57/6lHoxx9zd60ymckT9PmZuX+Xutkln
      0I3P6yEYDKBpDlTVQUcihs8fwKFp+Pw+uqMBLn31LY22XqIuC7/fD6q6W0+zwdT0HPKwNPs5
      cBOos+9BVzJvJ31AX2fno3n9w7v/dvccfTSt99juv13xzx5N6xo68VSZXX27y//il796NO2z
      zgH0RoVMzo0GJHoedmFLcMTvwR0aIBn1YZoF3v/sUxIJPwADwfCjMj5NHHlqPb1Hena3oX/3
      92RH1+P19RxFbxTJuOIv28NOvAPeyi6RDqeXeMz77AxniGR090dVDZJINGt9AeL79+oT76DX
      dhq0Xtjhyg/fc/v+Aob5vMZFg1yufOh15XI5AEy9xt2b11hMZQ9dprCH17YHKG1l6RgeobK0
      wE4+RqWQpjMRp1yu4PaHcCkGuUKKlTWVUY9CoVwnHA6gNxo0dBPV0qmZKpFQAFOvk80X8fiD
      ODEoVyo4PH68DsjliyytrnPmVJjZOzcJ9IwSD7gBaNSqlMoVHE4nDd0iHPZTyudQnD68TpW6
      XkfRXDQqRRSXD7/XLc0gm3mNTaAad65dxeMM0DWosZbOkN1YxNLcNNxx/PUUdVWhbsa58tU/
      sbCZZ+zcx6RTi/T0D7I0cRVX5xifXhilnt/kn//0FZ74cY5FdAqqh3rDQcJTI687qT04+Z8u
      FGjcvcFOvI9zowNM37tFTYetQo2watHe38vORhpLr5MMh1ioVBgIe7l8fRzVF+M3f/k5vrey
      UShel9d4JdjNifMXGWjzkX0warI7FOP0qTECLgc1Q2VwoBenpqBrfj769Bd0RVx0HDnGsSM9
      jJ46g7WTogisb+xw+uL7eK06qqeNk2fO0u5XqTUUBob68Th2v7cj4QjHT5+lkt8BwOELc2ps
      hN7+IYb7EhQrNaLJXiI+lbquMXrmLF7V5MjoOT44N/Z2HhCJ1+q1vef+RBuz9+7jCsYZDYcI
      qH1omoqiuelKtqNFNabmt+juGcLb6WRqcZOh48fpCe5mUq9Vae8fwA94+vsYn1ri+Ogx2vwu
      nEBnVzcupc69mXmSPX0ADI2Ocu/OJAPHdgdqSia7UF0euuJOvAQYcftYmZrAGR+iJ+TGcmh4
      BkfJTtyhWPUjIxvaz2sLgCsQ5eJ70Ue/RyKRRz+Hg07Az/n2h6cjA1yM9zz190eOn3xcSV+E
      82cjT80Ph3dPe54/F380TXP6OHnu/KPfQ6HQ7rKBx1d5j504+6OaqgyfOnfg7RLvFrkZTtia
      BEDYmgRA2JoEQNiaBEDYmgRA2JoEQNiaBEDYmgRA2JoEQNiaBEDYmgRA2JoEQNiaYlmWDIbw
      I41GA6fT+dJ/V91IY77gOb6NgBPrAF3OdF3H4Xj2Rt1isYj53O6lz7IUUIKBp55g72pkcBiF
      A5cBYOgGmmPve8UNp5u6279vGUFz9/+GruPcY9ueVFW8FNTQnvPy+RK6bmAYxu6wNs95fvFe
      Ym0+oiHfU9MkAHt41QBUKhW83j0687+ker2Oy3X4gbpM08QwjFfalh/Xx+l0vtSH7UVlNWPb
      dF1HVVVU9XCNGGkCCVuTAAhbkwA0kSZ9KluOBKCJDtseFT89eceaqNFovOkqiJckARC2JgEQ
      tiYBaCI5Bmg98o41kZwFaj0SgCbSdXlCWauRADSR3FXSemQ82Cbyzs1QnpunupNhNhbi1NkH
      zx7b3IFcAcUTxv2z//FmKymeIgFopvk5at98R3FhifuDSYa787vTp+dQ1jZRgp0SgLeMNIGE
      rUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAISt7RsAo1GjWt/n
      PnfLIJfNkE5naRjmviut12u86p3D1VKBdDpNpSb33ovD2zcAi7N3uT5+/6lpyyvLT3+A62mu
      37zPyto6tYax70rvT9ym8YoBuDdxi5WVFfKVvcfg3Fpbprp/FYQA9rkd2jLrlOpuQlqNqlnj
      ztffobuDbKxMszZ4lovnRnjYCbBczKFo0Gum+eMXt9DdTi6c7adixTByq7jdJvdmVkgOnASg
      kJrjxt0FHIEYIzGT8YU87lA7wwkHt+8vkRgYQd+YouRo4733LuJ9UFOjXiVX1ol2m1z7+k9s
      lDz87OIAV364Q/fRYdbuXEbpOsmZDo1b08t09A9jbM6TqRl0DgxTT82zUTC4cHaAW7eW6D7S
      wfLcApHuIc6fHJI2oc28MADV3Bazc9O4NR1HRx+ucCcXzwwzEXAxOjbMk0OlDo5dYHQwBmzT
      e/wcbe48rkCUzdn74I6yNTOB09eOYhlYQHo9zamPPmXt1g10h59zH37M2r2bzM7O4/RFUSyL
      9liM4k6Jaq2B17E7wKs/1sPFkRFMI8dM2UFjc4OSc4xoJESpXOf42EmiA2Pcu/SPOH0RFMvA
      397NWH8Py/PjTKzl6O6Ioxs1YkfGGBn0U81mKBfzNExwSwJs5YVvt26pfPLLf8dffP5rAkqd
      RCIKQNSncXV8ismJcSoNE1QP6eUJ/uXS92TKKm1tHnzBEG63jzaPh3h3J8OnTqDqDdxeL+3R
      GN3HBpi78i1aexK1WuTKd1/jTfRyYuw0qqnj9rgxTROHywfZRe6t7XYuaWtrA0BRPAQCDpID
      A3iV3f64oVCIoN/NzfF7HD/5cH0+wm1hNIeDULyf00c70FFwe8Ik2v1gWZimjjcYxHH4wY9F
      i3n14dEtnWyuQjgcOPSw2eVCGsXTjvc5o3jnclmCwTCq+tN8Ql91eHT+8AWZr7+jsLDEV4NJ
      /upvH/QIm3rcIyzwX/+0bzEyPPr+mjU8+qt3iVQctLUFD7Xyh3zB9hfOD4fbmrIeIX7snWjx
      bm1tAVDKrPPtpUvMr2fecI1Eq2iJTvF6tcjswgrtnb34lDqbW1v42rto98LC4grpUoN4PE7d
      dHDxg4vcvjPDQGeEYj5NamMbb8BPuWoy0N/J2uI8aiBO3OekUCmiugOUttfRgnGSsTByGGAv
      rRGASo7Ju+NYixnGOhyosU5WFhbIajW80S6c1R0AQsEAU1Mz9B89CsDy/Dy+UIiZpQ2SLoN7
      sxUwHJg7k5RdflKKRr9ng0vX7qI6Q/z7v/oN/sM1l0WLaYkm0Pr6JsdOnqXNpaC4g/T09OD3
      qJimSbVWRX9w9Xny1jUsT4BqtQKA5vXT3ZEg3pEkEQliKSqNepWGYaEqLo6PHsfr9jA0cpoP
      3j+DqyVeDdFMLbEH6Ds6zNpmhs7zXXhdGi7gSP8ADsVgYytHx7Hdb/zugaNki9XHf9d3BM3l
      pL/Li5N2hh0uspvrKN4+Ih4Hlqbh7D2K7ljDdPrQJAC20xIB0Fw+enuefrzlw6cx9vYGHk1r
      iyVpiz1exuPZXcbrfjwt0dnz49Lp6Optan1F65DvPGFrEgBhaxIAYWsSAGFrEgBhaxIAYWsS
      AGFrEgBhaxIAYWsSAGFrEgBhaxIAYWsSAGFrr94p/h32qp3ijWoVxTSxTBNdVXC5Hry0hgmm
      CYqK4gntW450it/fm+8UL56hKwpu3+5t29qTM+RVfmtJE6iJTHP/cVHF20UCIGxNAiBsTQLQ
      RIc92BQ/PQlAE8kxQOuRADSRYciDCVqNBEDYmgRA2JoEoIkcDrni1WokAMLW5CvrgCzLYqu4
      SRA/5nOe8Gc5FTkV2mIkAAdkWib/8+//O//F/BtK03sH4OJvPyMwEthznng7SRNI2JoEoIk0
      OQhuORKAJlKbcL+8+GlJAJqo0Wi86SqIlyQBELYmARC2JgFoIlXT9l9IvFUkAE2kHbKDtvjp
      yTvWRLquv+kqiJckAWgiGWGm9UgAhK1JAJpIkWOAliPvWBM55CxQy2laACzLZHl+isn705Tr
      z+scblAqVZqyvlJ2k/vTs5RqBznwbJDPl5uy3heRPsGtp3kBMAy2MznaAg7uTy3sjo+p61iW
      hWka6LqBZdVYXtrENE0sy8LQdQzTxDB0dMN4atqTf/9o/qO11bgzMU/Q56BYrj0oz3y8rP6g
      LOPhektMT62zvbFCTX9iHdbuOswmHbzKqBCtp4m3L1qkUyvkc3m6jp9l/IdvyFUNIj1HKK8u
      UDUsukaGSW8sMW5U6Q7C+HyKvsFh0tOXub9a51e/+Rk/fPkt/ec+RNuZ5s58ipEzF9iYvoO/
      c5iP3j/xYMxNF9EQTM2ucepciJvXFxmMKWy5YqzevYoFDA6f5v7UFBomo+dOALCT2kDTTP74
      5XcQ7OD9HhfXFrN8/NkvSYbdzXspRMtoYgAUeo6e5OiRDq6PT2OpQd6/2MvtqVlMbwfvD/q5
      lylj6HUsxUG1kGPk4ofEHBXSywmOxlKUCXLi1BgbOxtYhQbnL76HPxAkcvIk66tblA0IagA6
      sZ4TdHenmVzdxjQNSsUqZiROcmCYLl+F5WydnqExYmqaYqX2qJbl9CZtAyfoa/fTHvEwYi2w
      tZ0nGY4f/hWQu0FbTtOaQIqqUstu8PX3txkYOcnxvjaujc9yfPQcQ0mNG3MZRo70MXb+Ir1R
      H5HB46QmrrCy0yDsV/B3DdLuVshnM3R093PmzCibGxuoTjeVQg53NElpcYLFnRKgkk3Ncm1q
      i6H+ftq8VTZqLqJ+J6szE9xLaYz0BVicGmc55+BIZwc9PVHinT3Eh87QqeQoVnUss0GmCJ1R
      J9dvTnDYhpB0im89LfV8gEq5hMvrQ3vON61lGpSrdfw+Lxh1inUIePcfi940atTqGl7v7gd4
      r+cDGKbBb//X37ywS+QH//nfkjzW85Jb9Sx5PsD+bPl8AK/P/8L5iqrtfvgBNBcB78HKVTU3
      3gMu+yJyFqj1vFPXAUy9zvXvv+QPf/hHxqeXH8+oZ1ndLO4uY+ZYmN95QzUUb5t3KgCqw8X5
      D9+nMznE6WNdzE7c4PtrEzSMKvdv3+Tq7Wl0o0YmUyabWuC7yzcoNxrcvX6Z8anlQx8DiNbT
      Uk2gl2IaVKo10usLLEXPEO05RlxJs54tgGlw+fI9VJeLmWkXW9k6fREN0wLtEM1cGROo9bxT
      e4AnWY0K2/kqgWAA07DYWp5iam0Hn9sNikZbW4hgJEasPUbYqzA3O8dzxrs6+Dpb53yCeOAd
      3AMEOHt2CEVT+ejnH2IqKg6Hg77ublA1XE6N9rOA1Ue9YeByuYi2hVE0B85Dfh1If4DW8w4G
      QEFz7F4vdro9j6Zqnid+1gBUvA7ng989CHt6Z5tAQhyEBKCJ5Epw65EANJHcC9R6JABNJCPD
      tR4JgLA1CYCwNQlAE2nSJ7jlSACa6LC35oqfnrxjTdSQK8EtRwLQTHIvUMuRAAhbkwA0kRwD
      tB65dn9AChBwB3GaHly+vcf/cbikP0CraalO8T+VvTrFH0S1WsXjOfydpdIpfn/N6hQv++wm
      ku+S1iMBELYmAWgiuRu09UgAmkj6A7QeCUATycBYrUe+svZgWdYr3dtfq9Waci3ANM2m9S1o
      Rlnmg6Hq35b6PCzn4RD4hyEB2MNhTtM1a2ygZpRjmiaKohy6aaYoCpqmNe0YpxnbJqdBhWgC
      uRDWRJZlNeVbspnlwOHPTjWrnIdlvU3bJgEQtqb97ne/+92brkQr06sFrl+5SlUL4KmXqbld
      ZFLrODwBHAccaDS1OMnVm3fQnUHU8iZXbk8TiSXIZdP4PBora2nCoRcPDV/KbTE1t0E03k4h
      tcjVm/cJJzqopVe5dvMuoXgnxcw2bqfC2laOYMDHM7WzTLbW5lnPGbSHvdy99i0Ts6uEYwm2
      FiaYXEoTbw+TK+RR63l2ak4Cnr2PL2rFDDeuXSNbd9DmMbj6wzVMT5iAVueHyz9guMOo5Tz4
      vKytrBIKh56tD7sPX1ybv8etOzOEE52sTF5l/P4C3rY4hfVp7syuE4vHyaa3cVkVNosQ9B78
      GEMOgg9pbWmO7pFzpKYm8EUj1KwK2UydePLgh1fpYo2ff/IZLs3k6g/zXBztYnJxA49VoLC5
      SqhvdN8y6g0LzWpgArPLKS6cHeDu/TlUvcLZMyNMTs8QcFrktlcJ9ozu+WHDNMDjpZ4qgOWl
      4ejgF58cBT3NdMHPYFuZhc0Cam2TxWydUxc6nlsf3bAYO/8BU7fHma0oHD19lqXJaYoug+Pn
      LjJ/7x6K14vZyFEnsnd9ACwLT7iD92NBJhfXUMwwn346jKrn+GFGZTTpZTGVgdwaazWT46fP
      HOAVf0wOgg/JslT8fi9hn5OaUeX69zeIdHahvkTT1GnW+OZf/8yd2SU83jY84TBqrUF2Y465
      HYP2wP5npSKxGM4HK3V5vHj9MZxGDocvgM8bQFMNMutzzO7oxILPeSCg5iQejezW3VSo5lb5
      8st/JbW1jTcSJ9oeoFipMzt+DTMcx/mCbfQFAmzMTZIYOI5Tc+L3+Qh4FIqKm4jPg8etUSvv
      cPX2El2JyHPLURQVt6ozvVJmZDCOXt7iX/75zyxvbOMNRwmHA9TqOkuTtyi7wnhecnhvaQId
      Uq24w9LqNplyg2TAT9fpMbamZ4gkEjgOlAKdYrFGIOilWFWgvEkmnUUJx/F5vRxLellM68Tb
      Ai8sJb25xtz8Ipo/RGV7lXR2G8PbhVpKsZPNYjrCBAMBhjr8LGd0ouEAPz5+tIwG66uLLCxt
      EgwGwenEo5iooSg789NsZwokuroIx+K4CpuYgRh+194DAaxO32K77sXnVFGMImupHfI1hS6f
      wfxmhlLFpN0X4PipQWanV0l2xJ6pD4Bp1Ll69TqRWBRF0bBUBZ/Lge4KUFhbZCeXJxxP4g+G
      aLNKVJzhl2oCyUHwIVmmzubGBr5IB17FwHK5MKoVNLcXp3aQHaxFpZBlO1cm3pFE08ukMmWS
      HQkajRpej5tCoUQw+OIAZLbWyZfruHwhYkEnqZ0iyc4OrHqZ1E6ejs4kRq2K2+OiVKrh9/v2
      CIBOamONmm4RjsaxKjkqppOORJRKbodiQyPRHqauN3A7oFRTCPj23juVcztsZYtoDi/JZBtb
      G1uEYh34nLCxvkEw2oHL0tG8XqrFAl5/cM+9pmUapNZXqOkQak+g1vMU6gqdHXHqpSyZskky
      0U69VsPtUilVLAL+gz/yVgIgbE2OAYStSQCErUkAhK1JAIStSQDspl7g//6f/83f/f7vWdwq
      PTPbquf5hy++YGZxlWyxxk46/QYq+dORK8F2o1cpqFH++qM+/vjNNzRODFKqWyQ8FTYbftyp
      H/h2pkJPzyq5rXX+7v99wd/+x//G+dG+51+tbWGyB7Chjdlb/MOfrjAwGOf3v/8jnTE3/3Rl
      meW7kxDpY/TMRbz1NBVHlKFjxzh5tOtNV/m1kQDYUHLoDP/ht/+J944l6DwyTLwthKueIVM1
      CXgcON0uNEVBcThx1XJMLW+96Sq/NnIhzG5Mg1K1gc/nQbEMSpUGfp+HailP3dIIeJxUDQUX
      BobqxKgWaChuQgHvO9kEkgAIW5MmkLC1/w8VH0u8zyqF2wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='datefilter' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3RdV37f+zm394ZeCQIgCJIA2CmSEpv6qA5H0ow0o9FIU+yxE/utuOQ5
      iSfLWbFjP9svKy9x7CTTq2ZUORqJkihK7J0ECRYQBECid9zeyznn/XEBECA6CRKkcD5rcS3w
      3nP32ffc8z1779/+FUGWZRkFhQWKar47oKAwnygCUFjQ3FEBiKKIMuNSuJu4owJQbn6Fuw1l
      CqSwoFEEoLCgUQSgsKBRBKCwoFEEoLCgUQSgsKBRBKCwoFEEoLCgUQSgsKBRBKCwoFEEoLCg
      UQSgsKBRBKCwoFEEoLCgUQSgsKBRBKCwoFEEoLCgUQSgsKBRBKCwoFEEoLCgUQSgsKBRBKCw
      oFEEoLCgUQSgsKBRBKCwoLllAYR9/Vxp6QJkOpsusH//fjrdQdxuP2IyRt+AZw66qaBwe7hl
      AQSjUZLRKMgSnojA1u3bKczQ0t/voaWhHpXROhf9VFC4LWhutYHcvHy8vnaQQYy6OfjZp5RU
      r2Kg/TKirYByixZJkhBFEUmSkCRpLvqtoDAnCLdaICPg7eFSQxfLViwj6OlFLSToDWsxCmps
      2jAJSxEluXYEIJVKoVarEQRhjrqvoHBr3PIIEPQFsNtNBKNxLEY9/QEV1ZXFxCMJzCYt/mBk
      LvqpoHBbuOURYDYoI4DC3YZiBlVY0CgCUFjQKAJQWNAoAlBY0CgCUFjQKAJQWNDc8j6AgsJc
      IMsyyXgUldaIWiUTDYeR1TpMBj3DVvN4LIpaqyMWDiPKMjqjCZWYIJZIYTRb0Wlm/zxXBKBw
      VxD193L0d79EtfmPWWtsZ8/BE3hiEs+/8FUyzGqkuJfv/+Pfsv6lP8V97gAd7c241j5LqmEv
      kjmTTY/upDTLNOvzKlMghbsCkyOPh3dsQqUSsOWV8cyTj1CaV4heKwAy546dZMP2baCx8sSX
      nmf16g3sWFPOgKcPUeMkx2m4qfMqI4DCXUfS18W+um4eemQ7WpVAwt/OniMnkKKDWNZmsdJZ
      SECdQYZZw6t/8O+Q/Of5aH8zzz1cMetzKa4QCncFwf5rvPXLN+jV5rKjuoiTdfVo7Dk8va6Q
      TsNyNpU58LRfwGOswOK+jFRUTZ5J4sDv3qapP86jX/oyi1zGWZ9XEYDCXU1PZweZ+YVoVbfn
      nlEEoHBPMHybzvW9oyyCFe56Wnq8/Pm/fMIv915grp/XigAU7nouXuunqdPDobp2kqm5jShU
      BKBw17NqSS5mg5bK4gy0N7HZNRWKABTuetQqFbIMA765jy5UBKBw1xNLpIglUvR5Q0TjqTlt
      WxGAwl1PMBJHkmVC0SQDvvCctq0IQOGuxxeOk2FLb3L1uENz2rYiAIW7Hn8ohtNqpDjHTmuv
      b07bVnyBFO56fKEYdrOeHJeZlh4vkiyjmqMNMWUEULirkWUZfyiG1axncZ6THneIRFKcs/YV
      ASjc9fjDcRwWA4vzHPR6QkTjyTlrWxGAwl2NLA8JwKwnw2ZCp1XTPYcLYUUACnc1MukpkN1i
      wGzUku1MrwPmCmURvECQxQSXL5zHkF1Kab4LWRKprzuJJ5Qiq6gMuxygdSBM1cpVSP4u6lsH
      qa6pwWKY31tkZASwGNBp1BRk2mjpmTtLkDICLBB6mk7T5pW5cvwAA4n0axarA7s2wLnL3QRC
      CXSpAIdPnqa5uR1DaoDD51vmt9NAPCmSSIpYTXoEQaAk10GrIgCF2aI32WmtP0lrWz1t/QkE
      lZpF5ZUEvAJfeHQtDkOKE2cbKCgsY+WaGqIxDZWLc+a72/hCUfQ6NUZ9eiQqybXT5w0RmaOF
      sCKABYIjfwnf/r3fo7SgiIIMHQAJXzcxez42OYk6s4xXnn+Yxiv1nDx+kor1D1CSZZvnXoM/
      FMeg1WDQpQWQl2FFEAR6BoNz0v4tC+Da5VoOnryILEucP3mQPR99SKcvyJUr7QT622ho7ZuL
      fircIqmYn3df/xn2qh1o2k5y6HIXwbjE6hWVCAI01x7g1x+eZMO65Qy0tvLGz3/IgfOt891t
      fKEYet11AWQ7zeg1ajoGAnPS/i2vcEqXVRO/3I4splCZM3l07UrOXewi5h/A47OxfsNKJElC
      lmWlPNI8ojY4+dJXvwFAMGBkncmOVpPeTU3JsG7bE6wbOjb/5VdHPpdKza335WzxBiLotWq0
      qut9Kciy0tLt5YGqwltuf06X+JIkIYlJUKkxmO0kElGSkoxhKKBZEARUKmXWNSvkCO/+5Ff0
      hJNs3/kSywscNJz6lAO1zRQs38hS/SB7a5twFlfx4hfu5+h7/5MO5xN8ZWvpSBPxpEhrr4/F
      uQ50WjV2h2sev9Ds8EcSWE06tNrrt+riPAetvX4EQbjlGOFbFsDl2uM0dviRdAaMcoR9B+tY
      uXkzoX4v+Vl6rrV2s7SsAJUgIEnSnHR6QZFKorJnU1WoQZRkVCoVA94gK1aupvPaJXpyM6la
      tYpARMTf04jkXIReZsyD5vvvn+LTMy3s3FLJNx5feU9df384hsNiHPN9SvNdnLjcTTQhYjHq
      bqn9WxbAsjVbWLZm+H8FLBn6K7Mk7b5aWXarZ1jgJOKoDGYM2gSBcAyAzVsfoqHpKu2iClkQ
      MOl19A4O8vavPiSiNdAWCPCFHeUMZ8nRDN08GvW9N/r6Q3FctrH5fhblOnD7I4QiiVsWwL13
      RT6HyLKM2x8hHE2Mf1NnIj7QRu3lVsx6FSdO1zLY2cyRI0fJrlxDjgHOnD5NQtLy6p/8J/7g
      ta/wyCMPMDpRYHVZNpCeOtxLT39IL4KdlrFpDzPtRvRaDd3uW7cEKTvBt0hgoI2Dxy6y4cFH
      yLboSMWDHN63D1VWBVtWlVJ79ABhUxEPrCrh2GefYSisYs2yYkbfhlfa3fztLw9TmGXl3371
      fuzmUT+4xsaXX/s2AFKsj8tSIXlLsvluxdqhAypZfv+oxhxLeXzz2D56AlEAuubIdHinkCSZ
      QDg+9noAOo2a/EwrLT0+1lTk3dI5lBHgVpBTHDpwiqrVyzm0bz8AUipBceUaYvWnuNw/gDGz
      DE1/HZ9+ehQ5p5yBqycZCI515w1E4gTCcRra3fzJP+3hR7vP0tzlIZEUiSdTiEPWM5UhhxVL
      smfdzUF/Opi8azA453l1pkbi3IHd/OzX7+GLpjeuIt4uXv/JDzl4tpmIt4tf/fTHXO7w0N9y
      gZ/8+Oe0DVx3dIvGkyRSInaLfkyrGrWKomzbnPgEKSPALaEm36Xhd+9/SOXqHQDojDbaz33C
      VdnK9tx8BmMXGbBUsKbEwBu7P0FnyWeLYexzp6LQhcWo42uPVCMIAgfr2vj45FUKs2xIkkx1
      WTavfWE1Nzt7GfRHUKsEet0hRElGo75D06BkPw39Jh5doeJC2yBbKvMIRVI89ZWXOLp3H4c7
      kzz4xZ0c2XcIg5jiuZd2sufjQyx69gsAROJJkilp3AggCAKL8xzsPt58y11URoBbQU7R6k7x
      8ssv0tt6CVEUCfu9VO14ivUOLycvNdPUJ3PfhhW0XWvlgUefp9CewhuMj2nGHYyBADVlOTy2
      oYy/em0bf//dh8lxmbnW4+XIhY6bfnKn1xdRygtc9HlDpMQ7uBejtmOMNvHWgXqy7Onc/Vl5
      eVw8fojFK+8Dk5Ucux2jScOKihx+/fM3aO5zj3w8Ek+RTInYzfpxTRdl2+n3hoklbm2fQhHA
      raDSsm1jFR/s+pCtDz3MR7s/JCFLHPrwXfrsq1jhlGi7dIpfv7WLoprNdJz9DF1OFfk35LIf
      8IaREiGOfvgWb35wGEGjZlGug6eWgu/KISoLzFw5vY8f/PgXtA2EaD57mB/84Iecuzb9Lnsi
      JRKIxKkqzSYYSRCOTbDQvl2Ee/HrClhbkUlrj5cBt5uTe36LT+MgHvGTIYf55MABgjE9ZmcO
      NZVFlJWUj3w8EkukRwDL+Nz/OU4zRr2GtluMEVamQLeIq6iSl79eCVIK14MPYTUb2fni10fe
      f+VbS0f+fuJLL03YRq8nhD7Zi2XZ16iInuDCgMTqLBU5RUvY/MgTDA62UW/O4eUvP8nHB49x
      /9pVfK2khP3nO1hVOrXDWjiaJJZIsSjHgdWko3swRIZt9pVUbgrrYh7bnKLbL7FykZYDZ9pY
      V7UWugYQJYnqLQ/T2NDIhvXLUYX70VjyeGrzijF9V6mEEUe40bhsRiwmHW19fpYWZ950FxUB
      zBUqDVZz+nKKkkTXQBCrSYfTOn3O+u7BIJXL10LbXva1NFFW+CRk6TCoRTwdzdSs3cia8hS/
      eH0XSaMNPSEOnuniga2bpm07FE3X0Fqc58BhMdA5EKC6dPYL6Zslp3gJOYAsSzy6LR+1SiCr
      8PouddXKVek/TIWszRrr2uANxXBYDBOabjVqNUVZ9luODVCmQLeBuuY+/vR/7uFvfn6IcGxq
      t11JkunxhMh16dEZ7aRsS1idk6Ctd5CPdr1BOJ7gWls7KVHAYRJYuqKaXW/sIhQcpL65Y9q+
      BKMJEkmRXJeFTLuJrsG5cSKbLYKgQj3kEhNPpDh2qZOuaRza0pFg4+f/6fagJM9Ba6/vlixb
      04wAMol4P0cPd3PfxjxO1Q6wdUv1TZ9soZBMiSRFkXhSZDp7SyyRwhuMUrSqmOrCUtZudZLo
      b8afyuThL36VTkMdvf4UBWXLsOYvJTvLib/gq0QSKQxWx7R98QaiaV8ajZrCLBttff65+ZK3
      wL6zrfyv905TnGPn//ujxyfdnPMNjQCTsTjXwadnrhEIx2mv/ZTDl9rJKlvN849uRBbD/OJ/
      fZ9+VSbf/OrjnPzd62jXvkSNsYd3dh+id6CfF//wL6YTQIoz+z/j48+u0dFVyNIND9/K914w
      aNQqBARyXRaMeu2Ux0biSbzBGAXZDjJzMtIvWqrIGnq/qLCATn8nJqsTkzX9mjMrB+cM+zLo
      j5BpNyEIaS/K4/WdiJKEeh6dEk0GLbIMrimmh8PpUKYSQCSeZNAf4a0D9VQZYMmyZSSHBgOp
      u5bsHd/hsehxrkXNPPboNvZ7VWSWVPOdP1jKno8OUpZlmG4KJGHKKGFZkZNoLE7Af2/tJM4H
      sixz/mofkizT7w2TTE2dwyYYiRNLpMh0TLwwtRh1hCZykZhRX9ICGF705rosROMp/KH4NJ+8
      vQQi6fPnOC2TPv0lWSYYTYzbAxhNryeELENjh5tYSiLD5SQcHrpHBQFJEpEkuFHr/ReO41px
      H2qmmQJF/H6yihZzv30RZUvyZ/4NFzCJlMj5a/1sWlFIfesA/nCMLId50uPTVhkjBu3EP4XF
      qCMcTSBJMqpZ18mScQciI+LKc1lJiRKD/sg4B7M7yYn6LrQaFZ0Dk0/HRFEmGInjsE4ugJ1b
      Kjl6sYOaslyc+g6OHDtG5qJqrpw/TWbZagK7f8gb2jxeKXfzsx+9R1PKQcGrr9DrV7OlJj2c
      Tj0FEuPs2/0O5y/5WV69iEVVm9i+dvalKBcSnkCUroEArz6+klMN3fhCUwugxx0k057OdzMR
      Jn16uhBLpDAZpp5O3YgoyfiCcZYUpqdWLpsBtUpgwBemoihjVm3NFcFIgqZON5tXFHGpdWDS
      6ZgoSQQjCRwTbIINY9BpWFqUQb8vTPXzX6BmqwBSiitXrmI3mfnK7/3xyLGv/Olfjvy9JOe6
      89SUUyCTs5AXv/5tXnn5WWpWrWH1spLZfNcFSV1zHzlOC4vznGTYjHT2T23p6B4Mku00j1hI
      bsRk0IIAkWmsSRMhihLeUJTMoV1YlUpFXoZ1Xp3i6q72YjboeKCmmERKxBuMTXicKMmEookp
      1wCCIFCUbad7IIAoDU3+VRqWLluKZoaD5dRrAEFArYG6U2eJ+drZe/jSzFpdwNQ29lC5KBOL
      UUdBlo32fv+UZrpud5D8TOukc2GjXoMAN5UFISVJeIMxMuzX1xcFWVa6BgJ32CkujSzD6YZu
      lhZlUJafXsb3eyfO959IikTjKWxTjAAARdk2ut0hxJt08ZiBKUAFchyvN4BaN7sheKERiSW5
      0uFmVXkuggCFWTY6phgBZFmm2x0kL8M66THDVqSbGQHC0SQpURrjS1OYaaPPG76zPkFDhKIJ
      GtoHWVeZj8OaTnQ1mQAC4Th6nRr9JGujYbKdZpIpEW9o4pFkOma0E7x01UYWlS3C5bLf1EkW
      Clc6BpFlmWWLMhEEgUU5dk5e7kKSZdQTPOED4TjxhEj2JBYgSK8BBEEgfBMjgDsQwWLUYdRd
      /5kLsm0Mnmgilkih1Uy87rhdtPX6cAeirKnIQ61SkZ9hoXOSjTlfKIZJr510bTSMzazHbjHQ
      3ucn12WZdZ9mMAJInPnkHd5+/wOOnrs66xMsJM5f7acw24ZzyHJRkGVl0B8hnpjYFNrrDaHX
      qae0dBh0GlQCRG/CiW3QH8Vs0I6kFAHIz7DgDcbmvNbWdMiyzNmmHsrzndhM6REpP9NG90CQ
      iWZjvnAMk0GLbhqRWoy6ERePm2FKAUipGMc+20/Wyi185csvsHll6VSHL2jiyRTnr/axbmn+
      yHzeZTNhMmgn/XF6BkMYdVqclslNkiqVgNmoI3gTewGDvjAWkw7DKGcyq0mP2aCl1zO3pYam
      Q5RkTl/pYX1lwUhcQ2GWjX7fxHslvuDMRgC1SkVhlo32m9zhnlIAvu5mBlMZLC9QcfZCt5LS
      ZAoG/RE6BwKsKs8dec1u1mMz6Sf9cXo86T2A6X7k9GbYzUyBojgtxjFmRoNOQ4bNdMctQYO+
      CD3uIDXlOSMPiIIsK95gdMJ8//5wHItRN6l1bDSF2TY6b3JhP+UaQEakufYY7SYRT6AWUX6K
      h++rnPVJFgKXWgZwWQ3kZ15f0Oq1anJcZtr7JxZA92BwzPGTYTHqCEVmv3ubdoMYO7rotWqy
      HKZpHdHmmtNXusl1WSgclW4xP9OKLxQnFEuM8/n3DaVEn0kQf2GWDU8wSiSexGyYXZaIKQWQ
      UbySf/MXK2fV4EKltrGHFYuz0Y96mguCkC7sNoHLriTJ9HpCbFoxfXYzq+kmp0D+CEtv2PAS
      BIH8LOucZlieDlmWOdXQTXVZzpj1iMWow2LU0ucJU5A5Ng+pPxRjUe70zn4ABRlWEkmRQV8E
      c+7sBKDMaUYRbznMX/79P/Pm7iOIMpDw8fYvf8L/+B//m8aeAT5968d8ePwyyYiX13/wT/zL
      P/8L7QGRZErk4rV+Vi3JHffEKsqy0+sZX9cqHEsQCMenNIEOM+wPNJsRXpxgD2CYgkwb3Xcw
      QN4diNLa62PtDRkcdBo1WQ7zhNMx3xSu0DeS7TIjSfJNVZJXBDCKrmsDrH7gPu6/rwaVAOgc
      bNu2hSWL8kBW89Bjj2HUq0mlophcxawozSUSE2loH0SlEqgoHO9eUJxjIxxLjqQmGSYYSRCI
      xCmYwRTIatSnBcDMb9hgJEFKlEYsUqPJc1kIRRM3NarcDA1tg4iSxIqSrDGvazUqsp3mcUYC
      WZZHimLMBJ1GTa7LclMJcxUBjCJ3zUaKNUn27d1DbNivFgGTSTdmoSalkqj1RlBJRCJxzjX3
      UZhlG3E5GE1Bpo1YIoU7MPbp5AvFSCTFKf2EhjGbdMQTIqnUzDevAuF0dXXHBBamDLsRjVpF
      v2duq65PhCzL1Db1ULU4G71u7IxbEATyM6x03zACROMpkqI4Yi6dCYXZNjr7AyOjpBzs4Uc/
      +hHv7T2ZHs2BtgtHef/TkyQlmeazB/jwYK0igNH0d7ZyrvYsss6Ot+0CTa3tfPLZZ1y80oJK
      FeU3P/4Ve957k7rOIN6OJi4192EwqDnX3MuairwJvTWNek3aJ+iGp1OPO0iWw4RWM/1PYDXq
      iCXSN8VM8YdjSJI84QiQYTOh1ajpuQOm0Eg8yYVr/dy3vGDC9wuzxltwQtEEyMwq7WFxtp1u
      d3Bkh3vgci3LH3+Jx7auTt/kkS6OXUtSrPdzsfkCZ5pT5MZalZjg0ZRUb+I71ek428aLFyhe
      XsySV7498n71H/8ZXxn6e3NNFQBdAwG6B4Osrsi9sTngusNW+w0uEd3uELkuy4wKPluNOuKJ
      1KxGAG8whk6jxjyBB6lOqybLbhr35L0dtPcFCEUSLF+UNeH7OS4z4ViCUDSJ1ZS+4YfjH4b/
      PxOKsm18dLKZeDKFVqMjJug49tuf0FO+mmce3ogQGCCzfDnl9n5OtzXjKtvCqpxGRQCTUVE1
      s9DPhvZBjDoNi3Imt1gUZ9u52u0Zcf2VZZked5Bcl2VGya4sJh2xZIrkLPx33P4IGXYjgiAg
      p6L8yz/8Ndtf+x7Lcw2E+ppoP7sH/0AVTy5X8aM397G4aiOVFi97Tjdiy6/g688+NNJWvP0k
      /+U3J6hcsoLnnnkQnRji/Xd30drr5/4nn6d+70/xixk8/vzzXDnwDm0eNc+98jKZBoGTlzsp
      zXdOmonCZU3HQvS4g1hN6TVUer0zuxGgINOGNxgjHE1iMepQZZTwlZ0rOHjgMLHYKnSWbAaO
      nOOCM4W9uJzLp09wvDukTIFuhR53kF2Hr1CW75xyw6Y4xz6mwrkky/S6Q1N6gY7GMjwFmia6
      bDTDoZAgc/Hofso3bCI15DJcf6megtJloDFy9Mh5qtdUU1FWSDIhUlKxFNsNN15/l5fyZRVs
      WL8SrQrQWti4cQMliwrQaUSSoo41GzeSYw7SO6imelU1Np3A0Ysd7D7ejMNqQD1JNjqn1YhR
      rx2T6DYYiaMShFnZ9K0mHTaTnm53eqTNzrZz5thJVm1+kCvH9tIpZrKlykXIWMCK0uVsrHaR
      yFkxlyOAjCyl7RQ3/qjzkpFYlpFkeaQegSxLQ1FVKmRJGnpPle63LCOoVLOOkz18vp32Pj+J
      pIgsM+nTvCjbxqA/QjSewqjXIkkyfd4weRkzc94yGbSIojzOlDoZsizjDkTJsJuIu6/yq90H
      MQghCuIFVOevRtBoKF9czG8+2Et3bg2rl7k4dewAhQ4Lufl5NN2QbSK7ej3r2rs5d/RTnE89
      j9MgoDNZyc1yEAxFefCxx+lvvcyhywWYzE5s6h72HnXQG/ARS6TSC3JJnlAEWo2aTLtpTM0v
      fziOzayfVQScUa8lw26koz/A6iV56CzZPL3ziwBEMh/CZNSBfS3Duy4lK+6jhLnMCyTLnD60
      l4hgoLyqmkCfj1y7RF/CQmXJna826O+5wn/+l7f4T9/795h1Akc+eouGLj95SzdiC12mvq2H
      wYSTBxYbqG/vIqhfxL959Vmauzzkuiw4LMZppydrl+bzy70XeGrTkimPdVgMmA1augeDuGxG
      /OE48WRqRhYgSPu7GPWaGZstU2J6D6CyOBN9Rjl/+3d/S/vlY8QyKzl2/AQrK5dx9Oz7hGMq
      Nq1fyv7DhzFllZLrULPvyBHMeWOj/ga7Wzl66BT6zBLinee5pM2m8ehH9PmSbHwwj9PHT9Lj
      i/LYczto72nm2Ck/D+zcTvtxN2X5Tv7g2XWoJ6lNMOw2PtpI4A1OHQw/EVqNilyXZUK3E5Mx
      bQlLpkQO1rWTYTOyakl6zTaHApAIJ5KYM/LJsBtoqb2KO5DNpg1l6dJJkoQoindm80WWOHO2
      kTVrlpNKJkkKKgLhMAaThcb6M/zrb36NgotH8DtqqCq0UlR3kEDWOvaevsr/fq+WleU5/MVX
      N09bUCKRTGIx6FhTkTNlLS2dBlxWA629XpYWOens96XdlLUqksnpfXwkUcSo1+APRWd0fCSW
      TMfTmnUjx+eVr4OEh5i9AJ0zh1e/9W2OeXcT0eXyzde+OfLZsjVbAMacJ3txNa8sTq+JrjVc
      pqQ4i6UvXM9+V1V23Uly0eMvsIX0TXzycievPFpNlt0wZb9znEaaOt3E4gnUKgFvMILNpJvR
      dx1NfoaFuqt9k36utqmX//72CfRaNT/6v59Gr1XPnQBkQc36TVsRYwOcv9iOI6eIRMRLNCli
      1qpQq9XIsoxGc/vX3YGWg+w+Wk/M30bhkvvYsiKfR55+kXDYw8efnkMtJGkekNhe40BDlIYB
      gcfX2mjv7EEGVIKAVquZdkrU74tiM+txWExTfi+NRkNuhpWOgSAajYZeTwSbSY/DZkIzA598
      nZyeD0fiqRldP1FOEYjEyXFZxx6vyaZ6yJXLiECOy0KPJ8yqJWN3aEVRIhBJYDPrxl2DmRoH
      Tl3pQatRs2F50bR9XpTrZPfxq8QSInaLgUA4QbbTPOt7ZVGug49OXgVBNeHDy2JM7yskUiJJ
      UcZs1MztFKij+RJ9/jgVK1eTCkbJLc+htbuP8pJ8BK6vBW73msBeuo1//JttnKk9SUWhjsOn
      L1CkD/DRscvc//hOIl43ReXL0alVBDu7KV25GpUg0ONO28UX5zvRqKe/MXs9IewWA0aDdtrv
      VJxj5+K1/nSNW08oHQiv0czICqRWCZgMWkLR5IyuXTyZIhJL4rIZJz1eo1GT6zLTNZCee48+
      7p1DDfz28BVe2L6cZx9YOuvfS5Jk9py6yrZVizDN4NoUZNkIROIEowmsZj3BaIKKooxZnzfX
      ZUGWZQb9kQldTM5f66coO+1z9Ob+er7z1Jq5E4CgUlG5aiMjvqKO9ImWlMzMoel2sHbNBqKB
      XpaULiE3w8h3ax4YeW/ZkFnaWriEStLOV6cbenBYDPR5QumF8TQ/QK87RI7TPCNbflG2jU9O
      XyOZEke8QGf6+6pVKkx67Yw9Qr3BdDCJQTf5zysgjFRZGSaWSPFZbQu7DjUQHgrvvBnqWwcY
      9EfZUrNoRjexy5oWqtsfJctuJhJLznoNAJDlMKNSqeh1h8YJIJZIcaiujUfXl1GYZeO/vnGM
      HasXf/7NoEZbLrkZ0+fAqWvuIxJP8uTGJTOOmZ0unnc0eRnpnDx93jC97pm5QQ8jCGA2aGe8
      CB70R7Cb9WiniDNIZ4qz0TUQQJJkaht7+A/f/4w399fzpa3L2Lmlkrrm3lnvFkuyzEcnm6la
      nD3ytJ0OtVogL8NC50CAREq8aQFYTTpsZv2EznXnr/YRiMTZUlPM2qV5LFuUxRYM6cgAACAA
      SURBVOt7L3z+BTATREniQF0bG1cUUpLnYNAfmVYAyZSIJxAlxzUzS06u0wIyXO3yEI4lZxW/
      KggCFpNu4iJ6EzDoT68xtNMs4m0mPQP+CH/3qyP8P786QlmBk7/7vYd4btsyXnq4ivJCFz/e
      fW5GD4Oov4c3fv5jfvNJLeeae3lsQyk9TbX87Be/YSCUouX8YX755gcE4yIXj33Mu3uOjuxL
      qASBPJeF7sEgyZRIJJ6csSfoaARBSCciuMHtRJJkDpxro6Y0B5fNhCAIvPRwVdqJcdZn+RzS
      741w4VofD61ZTI7TTCAcnzZm1heKEU+K5DhndiObjVocVgPnr/YTS6ZmvAcwjMWoJxiZoQB8
      ERxWw5RWLFmWOXm5C1mGlh4vf/3tB/mDZ9eR40qnK9RrNfz+02u52NLPvrOt01rvJMHA4zu/
      TOupvRj0BlYudhKQ7Dzz0HrOnv6U45ejPLoymxO1n3G5L4ON2XGOXb0+xSrIstE1GCSWSA0J
      YPYjAKTXWp396VFtmH5fmLNNPTy6oWxk2lmW7+ThdaWKAAAOnW+jMMtGab4Ts1GHxaibNmbW
      G4yRTE2d0WE0giBQnG3j3NVeRFGe0HN0KiymmecIdQfS+UCnmn8LgsADNcVUl2bz9cdWsqTQ
      Ne74giwbO7dU8vreC+PcuW/EbDOw781fs+dKnCc2lqLSGFiUY+bMlU7WrN6EQ+rg9T2nyclb
      hjFykY+On6aj0zvSl/xMK72eEP5wHJ1GPWmqyOkoyrLhCUTG5FE6dqmTDJtpTHCQIAjs3FKp
      CCCRFDlY18YDNcXotRrMBi12i4GeaWrQugNRVCphRgUwhinOsTPoiwx5gc4uJYl1FoHxg/7o
      pMl2R7OyLIe/em07W2uKJz3mqU0VZDnM/OzjuuvZ1ybA0zsIJSuRpQDLi1xEY2E+3X+cRYsX
      o4314dEV88T9y7nW5WXt1h2U5hexouJ6oY78zHQGjX5vOB0LfJOF/Ipy7HiCsZHRUhQlPj1z
      jS0ri8cZBZxW470iAJH600c4eKKOxKj5aKC/jdZeH/HgAAc/20+PL0LI3cn+/UcIxmfmOHap
      tR9vMMYD1cUIQjpo3Gk1jJhEJ6PXEyTHaZnVdn1xTjqv0mwWwMOk44KnjwobNgNm3uh8JiWo
      r28YmXeLyShNDU1IgoqYv58Dn+2n3x/m4qkjfPzxx5y8dA1Iu2G8+oV0ntNTDV2Tnlen0/Dr
      dz9ix5YdqHvO0exN4nKYuHSulvaQmW3VGTR71Dy4dhn9HU3oF62lOv96nimHxYBBp6H+Wgs9
      Fw/wi9ffwZ8AZJmLxz7h//yf73O6oYtrF0/x7kf7IBXit7/8Cf/03/5f3jpQN9JOpi29gz/o
      T8c6XGwdwBeKcX9V0cSVZqa+nHcJUhx0TvRdFznbXsx9i53IUooDv3uDeMVjODyN5FQs59D+
      vThUUFRRyoEDx9iwfhXvHLzM+sp81lTkjbsAkixzsK6dZYsyyRp6YgpDC7KpRgB5yJktd4YL
      4GEKhgLCs2foAjEas0FLIiWSEsUpR49IPEkiKY7NNSTLdDfV8cbu4/x5WQUavUD3tau0XG3B
      VVrBmX0HKKhcwcEDh9i6bgUaYzcXW3vYsCK9w1tZnMlDa0v5+cfnWbYoc8KU5QNxA6qs5Xz5
      8Q0U5VjR6/UI+Y+NOiKfwiEPi5WbxteZsJr02Mx6LrcHqdn0CJtL4vRHwa6VaO0JsPNLj3Pi
      TBuVm6uwe2pBY+HZr36D1kvHidiuj2Da4eiw/gBVi7PZX9tCZXHmpA+dOz4CDHRd5ezFRpLi
      9UdZ2NNDrydEzN/PiRMnaGzrIxn1c/5sHaGEBCoTQrCdky0RFmWmb9TWuqMUrHkQi05FUbaF
      /fv3Y7DlYdelOHDgOJfbO/jk9FU+PNHMjz88N+Gi1huMcuZKN4+sKx0jjvxMK93u0KQLP0mW
      6fWGZ2wCHaa+ZQCAuqvTV3e8EYNOg0atmnYd4A3E0KhVY6KpZDHMxZYw66sXj7xWtLSKoqx0
      /wsyTOzbfwCzM5/s/CLibg8bt12vPyYIAl/esRyA//bGcRo73KREaeT6xBIpdh9vJi/DQmVx
      JgbDzLI5jMak1+CyGmnvD+Drb0YqXM8SO8gIuGxqPt69H4PdgsVqY3jQleUUje0hKoqvlwvR
      aFTkZaR9ggZ8Ec409fDo+rLJNwRn1cs5oKG+CyHRyRlzLhsX25ClFPve+SmRpU+xSmiiRywi
      UwWn9n9KzOSg+bPjfGl7Fa6qrbxgPsy5FjeP12Rz/uJF2nr6aUrm8mC5g1de/Qbv7XqfR3c+
      w8roAG8faCQ/04ZKJdDvDfOLT87zzSdWj7GM1F7pwaDTsPyGWNUcp2XEyjPRZlIyKeENRMmt
      np0lx2VLhyLmOGc/AuhHCWCqdYcnGEWtFsYEk4R6Gqi9UEdX+xWsBWvYWjW21sPVvjCvvvYK
      u979EDmWR7eYyUrL2GejxahnaXEGn55p4UqHmyyHGZ1WjcmgJRxN0NzlYcfqkpve5R9eCNee
      baMv0Eft0c/IsDxMJKXC4x4kkRLweD0c/2gXu/cfJaLO4D5nAHvl+jE3sUoQKMi00dA+yJkr
      3eg16imLAt5xAWzYuJxjx0WW5aSH0c6Lx8mu2YYXFb6eAC095yjMdRHRZPPg1k189Mk+UKs5
      s/cd3JKLJx+E9/Yc59mv/yGpiJdOv4gTL+++/hvWPvg0vU21fHq2lxde2sk7e9ND9tcerua/
      vnGcQDjOd59Zh8WkQ5JlPjlzjU1VReMCL7KcZkRRwhOIkJ85fjMnnkrhDkRnPQKsr8zn5/9h
      57SJsCbCoNOg1Uw/AniCUbQa9ZgRwFq0jr/483W0tl3DZUrywf6TlBr87DvTiKkryTMba3jr
      l2+w8bGdhPxR1q6vGteuIMDG5YU0drhZU5FHXoaVSCxJJJ7kSvsgapUK6yxieCeiMMuG1r6Y
      5555ghd2LGeg7QpaewlPPP8ayZSIVqtFEpOs3vEFVGoNahVsEMZfy+IcOx+fuko4mmDbqpKR
      h5gspejpaCehsbCoIBuBeRDA8eMXWLt1KzaDBkhx/PQZegbcNElF/LtXnuRfZVr59dsfUGAx
      4Qn4iMYk0Jp54rmXARATQXZsSQ/PGpOTEhNAJq9+c8nQGbL4VnXaunOxpZ+NywtZsTibf//1
      LfzD60f4h18f5c9e3MSgL53J7TtPrRn31Mp2mBAlGXcgNqEAQpF06dEbk05NhyAIsy5yMYxB
      q0ajVhGeJkOc2x/FaTFM6H5csqiUZCzI9o2FmA1qlm18ZOS91761bOgvJ5PJesOyAtYuzRvn
      IBdLpGjr87Eo+9bcXvIyLKgEFRnO9BqisKJm5D39kG+WSqWb9qbNdVmIxJL0JEXur76++BWT
      Qa5cbsbd1UTsuX9FpWMeBHC14TL1zQ1s2vEIPT0DvPDN/4tUaIBWP6hi3fziZx+x4ZGnKdT7
      eO+d3ez44vNjPq/WWSf9gUbT7wvTORBgzVAumtI8B//xG9v4x98c5T//9CCZdhOFmWnb/41Y
      jDqMeg0DvomzJvR4QjgshskL4EkRdr/5Nlf7fNz/xAusKc8FZC7ufYPDgSx+f+cOzn34I06z
      kq1ON3vPXcNZtIyvPrV90u+jn8EaIBCOc+xSB8mURDyRGpeFAUBrsHIrSe5VAvi9blKCDpc9
      vWmmkuK4DOk349EQgVAMm9OFThDx+vwYLfZpiwUCIzvObn9kRr5Yk5EYqs6Z7TSPyUSn0dux
      qsI0SC7yh26iOy6Ab/7RHyIIAsmYj9LitJVBY8mi3AKQxTfLhjPRZfHKa0sma2Za6lsHsJn1
      IxdgeI75H7+xje/9cB9HLnawYVnBhC7PgiCQl2EdE6Y3ml53CKfVMLmzmcrEfZvuQzpzEe3Q
      hk7M00G7mEmRQ0XM28qAlEWGTUsyBSVLliBNc1tq1GoMOs2UAugaCNDc6cGg19DnDY+YXecS
      Kenn0N7PGOzvZvPX/ogKh8DVS2e4dK2LpC6P6lyZho5+ZGMuiwxemgdEVm3aOmlQ/GgaO9zI
      pNNMpkTpptO3t/f7SYpS+l/qejtSLErFlidx6t7lfFecB4r182cG1RocTPbzyHI6y5dWo5pR
      ZNZEnz/b1EP14uxxaUfsZj3bVy7iF3svTOlwlTaFTuwV2usJ4bIaJ09pIsvozDYKc5z4giHA
      yQdv/YomH7T7RVpO7SEhGGnwt+LYUU5+XgGNTVMXvRaE6StGFmXbyc2wsLIs96b2GmaCWmcn
      36GjO5hDlil9XUpKSzh6sp7yjespzodTZxup2LySa8fqiWqMqDWadKjsNG1/YWM5kiyzvrJg
      2mCkqXiguphwLEl5gRPjqMzYYjLM7l2/I67J4LEl3Xx6Mnx37gO09/n5s3/+BINOzT//yZOz
      XlwlUxJ1zX386y9tmDA+eefWZdxfU0zWFO4IeZlWjl/qmPBJ1O0OUpRln3yIjnn5aM9HDPpi
      bHhkKUePn+a53/sLxKifoxea2LJhHQS7+awpREGyjc8OHcZetHza72Ux6ghO4RKdFEWSKYmN
      K27tBpoKKZFg6dYnsB3bRX1vjPuLjUg6Fy9//Xne/egY6yoe5Ktff463PzyEK2cRTz6yiQ92
      H6P8hSeY7nme47TwzSdW33IfbWY9L2wffz211mxe/Pq3AIgEB9ngLL47BQCAAKFYknhSnNGc
      fzSNnW7UKtVIHaobUamEab0x81wWPMHYhJVU+jwh1ldOUTbW6OKFl15N/50Y5LKQnuqpjfb0
      zQ9gzefBNQAVLL3vkYlaGYd1Gn+g8FAoZKTrPG811PPE49sxadWkwv389v39VD/wCKWZGuou
      NFK1ai16DfQ11+KzVLA0d2YmXSnmY9e77xMXrDy2ZJD9p/w44+0cv9TJsvXbuXzqM8409lKz
      +REWmwK89et3WLH50Wlv/qkIeTr53bsfElKbeeGlr+LQiRzb8x51LX2s3vI4Ysc56lq6WbP9
      afyXPqG5P8bWJ1+kapFr0jZN1kzgLt0JLs6x8/fffZi/+fkhDp9vn3VU0umGbhbl2slywG9/
      +mM6vB4eeO7brCqyU3vgPY5fvEZ/xMJzW0o4cq4RS+5SSnUeznd6WVKzlYc2VpKXacUXjBJL
      pMaMQNF4En8oPmMvUHSZLCub7RWYGItRT1tg8qzOnkAUQUigMxaxwdbJmRYfWyoy2LvnABsf
      2sbJg0fR15Ti9Q8QToI64eb4qYOk8jJmLACNLZevfSOdLCzi76emcikuaxUrR2KNKli3/frx
      r5XW3NjErDHZc3n+61/nwpF9hFPg0KTwxtTs2LaJTo+XrQ8+SUVPM1e8UcLoeOqZL5CXNzOL
      1F3pCyQIAovznDz7QCUfHGvEE5zaE3E0KVHi/NU+VpXnolKZefrlr7F13SpM+vQzaM22Z3jx
      mUd57AsPs7RmNaW5uWRm2AlGUuTlFdLQdAEAu0mPRqPG7R977kF/FEElzEuh6ev+QBPvUPd6
      QmQ7nJQVG2jymakpThsAyouzee+NNxBNGRSVLSPbbgAk6s9dYM2mjdPOzSfDZM/GZb0DhRPF
      OGdOHce5dCMF5nS1SaNepqWlE1kl0N96gYZBmQ01FVQsKuT8yX3sq702o6bvSgEM88i6UjRq
      FR+daJ5xNoked5BeT2jI/Clz9uhBLOVrWZKVfsLJssylhjaWVxSD2sDylTWEfV62P/Eka1et
      wKZPXxK9To3LZhxnCRr0R1AJ8yeAWCI1oVdmOttciGwHHD56maqaSvQqgXgiwZW2Hp55/gVE
      fxvhcJhgMITfH+DqtQZ+9/bvOHL4GDdXY/HO0N10hk/2HmfPR+/T0d5CfaeHsN9Da1s78USQ
      XW99SN2J/RypO0/HtS7auwexTFF2ajR35RRoGL1WzZcfrOIH79fy6PqyGeXRudw2iEGnoSTP
      Ack+DuyvxXChkc2PPE3I08/9a0rQOEux61ScPbifE/Ud5C5ZTXtDLXuPXWLTU18D0vkzM2zG
      cV6h/d4QJoMG6yzS9s0VVpOOREoknkyhUY8/f487SI7NiCrVz2ef7KF6zWpa2r08+vB2Ptxz
      mJpNDzHYXEd7b5CeVD3Pv/xdSHjp8Om4ufCTO0Phiq18b8VWADquXCArP58VX3nt+gHbtlz/
      e/Xsplx3tQAEQWDj8kJ2H2/inYOX+f1n1k15vCTJnGvuZdWS3HSgujaXP/nevwUgGe6j01SO
      oLWzaV06MGL11idZvfX655es2T7yt0pQke0w03vDCNDrCZHjtMxLtjuLUUciKZJIitzokCkD
      fd4wy0tKeOr+HQBIqShliyvQ61R88fmhDcXiTBav2nz9gzonRZO7ytx1FC2dWVqWmXJXT4Eg
      nV78pYeqOFDXxtVuz5THRhNJLrUMTGih0ZpzWFww840hQYCCTCtdowQgyzLdg6HbZmOfjusj
      wPgUicNToPxR/kkqjRGj7q7/ieeVe+LqrCrPpSzfxa5DDYhTBGi39PgQJYmygsnNX7Mhx2Wh
      3xtGlNLnTIkS7kAkHeA+D4weAW4kEI6TEsV5WZvcy9wTAlCp0lH8pxq6aeycPFfNmSvdLM5z
      kjGLMMWpyLSbkGVG4mEjQybQ2Qa0zxUWoy7t55McH9vQ4w5hNqTTgijMnHtCAABLCzNYX1nA
      63svjjyRRyNJMmebellVnjNpItbZMuy/3+9NlzeKxJL4wzFy50kAOo0arUZFJDbeI7THHcRi
      1M2qqITCPSQAtVrFk5uW0NA+yF//7CCB8FiXgG53ELc/SnXp3GWidlgM6LRq+n1pS5AvmDYW
      ziYQfk4RwDyJP1DvcNHtm3QgW6jcMwIAMA55X9Y29vJP756kqdM9MhpcahnAoNdM6N58s2jU
      aUvQsCm0xxMi02GaNuHU7UJASGeHmCA/UPdQOsB5qcVwD3NXm0FvpDDbxjefXM2gL8LVbi9/
      +YN91JTl8NSmJRyv76SmNHvOncDyMizXBeAOkWkz3TZHs2kR0gm2bhwBhoP0H6gump9+3cPc
      UwJQq1Q8vqEcSAemN3d62HW4gb/5+SHiSZEtU+S3uVnyMqycqO9ElCR63cF0MtxZpEKZSwSG
      MsTdIIBILDnjotsKY7nLBCByau8H1Db3se7BJ7CGmth36hrbn9qJ+8Ie6lo8bHz8y6xenIFK
      EKgoyuDPX9zMr/Ze4M199bOqKztT8jIs+MNxIrEkvZ4QG1cUzus0w2zQjvgDDffDH44TTSTJ
      mUW+UYU0c1ofYKCzmStdQdavrybgCeG06ej3xcjPGV9BfUKkBH0hgUce2kzLQDvXWgZ59otP
      43DZKN76FMtWNHJ+IAKLx6a4+/KOKh5aW4rrNixO8zKsBCJxQtEEPZ4QufP6lE1nexjwjS+6
      HUukZp2nSGEOBSBJKdr7A6ypcHD5ai96MYmn20vWkln4ZsgCFoPM2fOXcRYXEPX5OXpoDziW
      sa5YRYdPy/3rCsd9bLg+1O0gy2EikRTpHEgnbp0qiOZ2k44K09Pa60eSZdRDI0C/L4zVpJ9R
      3K3CWOauRJIkYzRbMDlzUXW0MNDbgWjLp8KoHakPJg1ZbIb/P9KJoVI4qXgE72AfbQNBZHsh
      ixZbqGvspCy7gl/94Pvo8ypI6kxsrMwf8Q4VBAGNRoMoinTWfsy7VyS+WOXkkzOXyS1ZSYUt
      wMG6FlzFVex8eAMq1di6XCpVunxTKpWasE0xmSTDZuR0Qyd6rRqLUUs0Gh3f91E1wtRq9bjz
      jG5TGrWPodVqJ78eE7SpEUTC0QSRSBSdVoNaraat202ey0I0Gp3yPLIsT9vP6a7HrfR9ovPc
      jjZn0/c5E4BKrSLiG6ThvBttRgVZOjNOQ5Sr3R7KClxoVSpSqRRqtXrS2k9arYudL39n1Csb
      2fZE+q8nt66fugNJP5fdehbnqhl0B6hZs56Gxiv0xQ1UrVlPw6UmBN0DaGDC80/2mkarJcdp
      5vy1ASxG/Uhd2/F9H//aTM8zGRO1meWyE4q1YTAY0GrSddc8oQR5mVaMxutTwMmv8c3381b7
      Pp9tTnaeObPnCSo1VVUrMGeVs7TARUlJPjmLlpJjvzNb8wc/+A0NzY3sP3CMknWbMKlkxGSC
      ddt2YFXLJMTETX1ZlSCQ7TTTPRjEbtFPWXboTmAx6ohEkyNJckUpnUDgdk0BP+/M4a8pYLA4
      KBr6HYxDFfmsljuzMNvyzLfYGA2x9+QFdOE+Tpw4Tk7lZuKedk6cOEZx1YM3FZc6nCIFuCs2
      mixGHeF4cmgDUE0yJTLgj5A/T+4Z9zp3mRn05tHq9Gh1ep55ZDsA3/3DFSPv/f4frpzkUzNj
      WAB3w1PWoNOgFoSRqvOJVDpPqWICvTnuKVeI+UI3lP9HPU8bYKPRatTotOqR3eBBXxidVn1b
      9kAWAooApkGWZU439gBwtql3nnsDOq0KvVYzkh+o252uVXyzOUcXOp+bKdDtQhAEdqwuYdAf
      4aE1i6f/wG1Gd8MI0OsJ4TDrx2RAU5g5ylWbAZXFmXzvla3TH3gH0GnV6LXqEX+gnsEgOS7L
      hDlOFaZHuWqTItPXcoG3d32IP57elGk4dxxPJEWgv43zTe3z0iutJi2AUOT6CHA3LM7vVRQB
      TEYyxKEzrWxaVcLhQ2eI9Dfy6YHDtHmSdHS209PbPy/dUgnCSFCMKEn0e8PzFqL5eUARwAS0
      NdRysqGLDE2IXR/sIyM3g6O1HTy0Je3XtKJmNfr5igngepZoXzBGUhRnlC9JYWKUNcAEuHKK
      0EXCHG628twX17N3/1EiAQ/HDl4la3MGFVsKiEYixBJJDLo7b32xGnUEogncgSiSxKyLbitc
      RxHABFidWVidmWxe4eXAsXoe++JLZJo1hDw9JAxOTu79LYP+BOeaF7Fx+Z2PwrKYdHS7Qwz6
      IwgqyFBSodw0igAmRaCgYjVfrrier97iSpdb2vHMV+arU+l+DE2B+jwhsuzmOcuCsRBRrtw9
      iNWoJxRN0DUYnLcsdZ8XFAHcg5iNWpIpkfZ+vxIFdosoArgHMRt0ROJJegZDSiD8LaKsAe5B
      zEYtiaRINJ5S9gBuEUUA9yBmgw5BEFCrUPYAbhFFAPcgZqMWlSBgs0xRq1hhRihrgHsQo06L
      eqhOmZIL9NZQBHCPolarsJn0kxfrVpgRytW7B7nU2k8klqSj308kPj5VusLMUQRwD6JWqdDr
      1JgMWoSbLnKqACDIM60/OgcM5wWa78wKnwe6B4OYjVrsN1bLU5gVignhbifh5Y1f76LPn+TJ
      F1+iNMvK5ROfcOBsE9nl91FhGuRQ3VXyKzZSlRnjwKVuvvaV59Era+MZoUyB7nZ0Th58aDsV
      JblIUjoyrXLDw3zt+adwGlV4QknWbViHTkhQtnIzyxdncufG9HsfRQB3Mfve+wUn6jtIJRLo
      dGriibQAPN3N1DUOsmH9SjRaFYlojFg8Ok1rChOhrAHuchK+bt7c9QG+UIptz3yJhLuXjguf
      0R7Uk1+6hnxdL3VNPdiLVrDCHOCNvUcov+8JXn16y/SNKygCuJcQ/W1c9tipWuyY7658bph3
      AYyudDIa5fWbfx0Yd41vfG2qdm738XfT63d0DaDRaMZ1anQe+NGMzgU/k+MX2uuTXR9pghrK
      N9P+bNuZq/Pe7utz4/F3dASYDclkcsJ88ApplOszNTO9PnetACYbwhTSKNdnamZ6fe5aASgo
      3AnmfR9AFuNcrD3O8bOXSabiXDpznAvNnYipONfqaxkcKogYDfRxvmF+0hHOK1KKpou1HD1Z
      RzSZounCac5cbEYUk3Q0XqDbG4NUhJNHDnHk+GkiC8w3LhkLcObEEeoa2kjFg5w+doSrXW5S
      8TCXL54nlAAxEebsyaPUX+sZ9/n5F0AyQW75KrKI0dXbgjqrAp2vC3c0gcMA7iiAxNXGRnyh
      8Hx3984jJrAXVlDqMjDQcwWfpoAMyU9fOI5ZJ+CLiaRCXsyFldy/cR2mBbYsEFMSS2rWow0O
      0NjSQtGylYR7WghEY5gMKsJJ6Gy6TOaS1VQUZ437/LwLQNBbSHnbkVx52GQRs91BptNAQrBi
      H6r7O9jeiCGnFB0i0kKbsWmNaCKDeAUjOTowZ2ST7TQQTulxOa0IgKTW42m9wL6DRwjGJ7bG
      fF7Rmyx4OxoxF5djUKkwm8zYLFrUpgwsQw5RvkCY1gsnOXT6IjfePfMugJS/nUvtITRSHFlv
      o7vxPA1dEWyqIO2dvfR2dRCKi/S3NXHtaiuh5MRmr88rUqSfs819GFQSCVMm7sZa6lp8ZBri
      tLd309vViT8mkptXjM2gIhZfWNdnoL2BnpAAiQhajZqmK/X0+ESEqIfOrl46u3rIzcnCll2A
      Tk5x49WZ90WwGA/T2TsIqMgpyCfs6Ucw2LHoJPr63EgqDbm5ueg1EI4mMZsWlvuvlIzR1dOH
      JAtk5uaRCnmIC0YyrFp6uvsRBYGMrGzC3kEEg40sl21BRQjEQj763H5Uah25eVl4+vowObPQ
      pML0ewKg0VOYm8FgXx86awZO69g0kvMuAAWF+WTep0AKCvOJIgCFBY0iAIUFjSIAhQWNIoDP
      MWIiym9++WMGgnEGrp3hzfePjTMDDuP1ehAlmQtnjxGMTXxUf8tF3v3kKAD+7kbeevNNPjl6
      DlEaa0fpazjGNc8kZ4r18bMf/pS3du1mIBgf9YaEx+O54+Gc6r/6q7/6qzt7SoU7hZiI8tlH
      72EtWoH/ah1X+lJUlzs4tP8IOmc23vZG6s5fIKky8PqP/ju+lA1PVx1dPT4EkwuX1UhosJ39
      h09jdWWy61ffh4wl1CzJ5+033ubRL71I98nPSGXk4G1rZyAs4u+sZ98nuzGU3U+g+QSNfTEc
      mjjtHe0ERANOjYf/v71z22kijKLw187883dm2o4DFEEOtkotSIAQDyRemHjp03njhW+gFyYo
      AVIlksjBmiC2CAhGSThYCQdbisW2M23HC018gt5Av0dYycre2Xtn7ZU9FFplvAAAAdtJREFU
      g4d3wkzMbdOm5EktbxAMKzx59Bif3Y3uHPHu4xc6unvQlMYOdZsV4JzTfrWXw51dCp6KLeDt
      1CtiI8MkJ1+STi0RG+phcXadrmicsVuDKJ5C30A/qfk3ACSTswyNRJmanqPrWoJ7o4NAFden
      YwU0ImGFH9ltpmcytJunzH86YSTRS35vlRfTi6SSz/mQSbOwfkx32/8ka+tKF+7PQw72s3zf
      WGB24xfRvjij11t4+mycb6vvmV/Zabg+TQOcd2QrSn4J1e4HwLICrKXTCNNGFQFCVggFaNP9
      ZD5v4QlBKBjG7/t7UmHpCpn0GobdiioEUmqAJNEpmUjOsLwPNzpNon0JQmYQ5yTL190DRCBE
      pOMyY/cfYGsqiYEE4t8rp+zWKpPjr4nfHmJ9c5tYrJe6pyIpsblzSCQSIT58l5u9dsPlaS7C
      zjGeV6dUKqN4NZAGtYqDlH7y+VNMywbXQRqS0m8XTa1TOHMxdRVN06lUyhiGQdUpkS+cYdkt
      1N0yQuoofh9ezSWXy6OZFqb0U3E8AgFBsZDDqUHQsnGKJ5RrPsKmDopACgXqLkfHOfxCx74U
      olwsUKmCNEz81RKlmoKh1ikUy4TtFgKisQFHTQM0udA0W6AmF5o/AkwpqvIpSeAAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='filtercategory-subcategory' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='filtercustomer' width='192'>
      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
      c1MAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='filtermeasre' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='hirarchyfilter' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='sngle-multipal value filter' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
